<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:p="http://www.springframework.org/schema/p"
   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

   <!-- @Autowired 뿐만 아니라 @Component 등의 애노테이션을 처리할 객체 등록-->
  <context:component-scan base-package="step28.ex5"/>
   
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost:3306/webappdb"/>
    <property name="username" value="webapp"/>
    <property name="password" value="1111"/>
  </bean>
   
  <!-- DB 트랜잭션을 관리하는 객체이다.
       Mybatis에서 관리하던 것을 스프링으로 옮겼다. -->
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
   
  <!-- SqlSessionFactory를 만들어줌. FactoryFactory안하고 이 개발자는 이렇게 만듦 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" > 
    <!-- Mybatis를 Spring IoC컨테이너와 연동해 사용할 때는 
         DBConnectionPool(DataSource)의 관리를 스프링에 맡겨야 한다. -->
    <property name="dataSource"  ref="dataSource"></property>
    
    <!-- DateSource는 Mybatis에서 관리하지 않기 때문에 설정 파일에서 제거한다. -->
    <property name="configLocation"  value="step28/ex5/mybatis-config.xml"/>   
  </bean>
   
</beans>